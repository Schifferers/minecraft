name: Docker Build

concurrency: vanilla

on:
  push:
    branches:
      - master
    paths:
      - vanilla/**
      - scripts/fetch-server.sh
      - eula.txt

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: "Get Previous tag"
      #   id: previoustag
      #   uses: actions-ecosystem/action-get-latest-tag@v1
      #   with:
      #     semver_only: true
      #     initial_version: v0.0.0
      #     with_initial_version: true
      - name: Get current date
        id: getbuilddate
        run: |
          echo "::set-output name=date::$(date -u)"
          echo "::set-output name=isodate::$(date -u '+%Y-%m-%dT%H:%M:%S')"
          echo "::set-output name=tagdate::$(date -u '+%Y%m%d%H%M%S')"
          echo "::set-output name=timestamp::$(date -u '+%s')"
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/schifferers/minecraft
          tags: |
            type=raw,value=vanilla
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # - uses: gbrls/action-dropbox-download@main
      #   with:
      #     dropbox-refresh-token: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
      #     source-path: "/code"
      #     destination-path: "downloaded"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          dockerfile: vanilla/build/Dockerfile
          context: .
          push: true
          no-cache: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            BUILD_NUMBER=${{ github.run_number }}
            BUILD_JOB=${{ github.job }}
            BUILD_SHA=${{ github.sha }}
            BUILD_DATE=${{ steps.getbuilddate.outputs.isodate }}
            BUILD_VERSION=${{ steps.previoustag.outputs.tag }}
